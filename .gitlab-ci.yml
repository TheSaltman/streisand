# This file is a template, and might need editing before it works on your project.
# Official framework image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/python
image: python:3.5

# Pick zero or more services to be used on all builds.
# Only needed when using a docker container to run your tests in.
# Check out: http://docs.gitlab.com/ce/ci/docker/using_docker_images.html#what-is-a-service
# services:
#  - postgres:9.5

# variables:
#  POSTGRES_DB: database_name

# This folder is cached between builds
# http://docs.gitlab.com/ce/ci/yaml/README.html#cache
cache:
  paths:
  - ~/.cache/pip/

# This is a basic example for a gem or script which doesn't use
# services such as redis or postgres
before_script:
  # Uncomment next line if your Django app needs a JS runtime:
  # - apt-get update -q && apt-get install nodejs -yqq
  - pip install -r requirements.txt
  - pip install -r testing_requirements.txt
  - pip install coverage


# To get Django tests to work you may need to create a settings file using
# the following DATABASES:
# 
# DATABASES = {
#     'default': {
#        'ENGINE': 'django.db.backends.postgresql_psycopg2',
#        'NAME': 'ci',
#        'USER': 'postgres',
#        'PASSWORD': 'postgres',
#        'HOST': 'postgres',
#        'PORT': '5432',
#    },
# }
#
# and then adding `--settings app.settings.ci` (or similar) to the test command

test:
  
  script:
  - flake8 .
  - ./streisand/manage.py makemigrations
  - ./streisand/manage.py migrate
  - coverage run ./streisand/manage.py test streisand
  - coverage report -m
  
codequality:
  <<: *dedicated-no-docs-no-db-pull-cache-job
  image: docker:latest
  before_script: []
  services:
    - docker:dind
  variables:
    SETUP_DB: "false"
    DOCKER_DRIVER: overlay2
    CODECLIMATE_FORMAT: json
  cache: {}
  dependencies: []
  script:
    - apk update && apk add jq
    - ./scripts/codequality analyze -f json > raw_codeclimate.json || true
    # The following line keeps only the fields used in the MR widget, reducing the JSON artifact size
    - jq -c 'map({check_name,description,fingerprint,location})' raw_codeclimate.json > codeclimate.json
  artifacts:
    paths: [codeclimate.json]
    expire_in: 1 week

    
  tags:
    - codequality